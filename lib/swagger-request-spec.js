// Generated by CoffeeScript 1.6.3
(function() {
  window.api_key = 'special-key';

  describe('SwaggerRequest', function() {
    beforeEach(function() {
      window.swagger = new SwaggerApi({
        url: 'http://localhost:8002/api/api-docs'
      });
      swagger.build();
      return waitsFor(function() {
        return swagger.ready != null;
      });
    });
    describe("execute get operations", function() {
      beforeEach(function() {
        window.body = null;
        window.response = null;
        window.callback = null;
        window.error = null;
        window.operation = swagger.pet.operations.getPetById;
        window.success_callback = function(data) {
          return window.response = data;
        };
        return window.error_callback = function(data) {
          return window.error = data;
        };
      });
      it("fetches an object with json", function() {
        var opts, params;
        params = {};
        opts = {
          requestContentType: null,
          responseContentType: "application/json"
        };
        new SwaggerRequest("GET", "http://localhost:8002/api/pet/1", params, opts, window.success_callback, window.error_callback, operation);
        return window.args = {
          petId: '1'
        };
      });
      waitsFor(function() {
        return window.response != null;
      });
      runs(function() {
        var data, pet;
        data = window.response.content.data;
        pet = JSON.parse(data);
        expect(pet).toBeDefined;
        expect(pet.id).toBe(1);
        return expect(window.error).toBe(null);
      });
      it("fetches an object with xml", function() {
        var opts, params;
        params = {};
        opts = {
          requestContentType: "application/xml",
          responseContentType: null
        };
        new SwaggerRequest("GET", "http://localhost:8002/api/pet/1", params, opts, success_callback, error_callback, operation);
        return window.args = {
          petId: '1'
        };
      });
      waitsFor(function() {
        return window.response != null;
      });
      runs(function() {
        var data, parser, pet;
        parser = new DOMParser();
        data = window.response.content.data;
        pet = parser.parseFromString(data, "text/xml");
        return expect(pet).toBeDefined;
      });
      it("fetches an object with plain text", function() {
        var opts, params;
        params = {};
        opts = {
          requestContentType: "text/plain",
          responseContentType: "text/plain"
        };
        new SwaggerRequest("GET", "http://localhost:8002/api/pet/1", params, opts, success_callback, error_callback, operation);
        return window.args = {
          petId: '1'
        };
      });
      waitsFor(function() {
        return window.response != null;
      });
      runs(function() {
        var pet;
        pet = window.response.content.data;
        return expect(pet).toBe("Pet(id=1, category=Category(id=2, name=Cats), name=Cat 1, photoUrls=[url1, url2], tags=[Tag(id=1, name=tag1), Tag(id=2, name=tag2)], status=available)");
      });
      it("fetches an object as html", function() {
        var opts, params;
        params = {};
        opts = {
          requestContentType: null,
          responseContentType: "text/html"
        };
        new SwaggerRequest("GET", "http://localhost:8002/api/pet/1", params, opts, success_callback, error_callback, operation);
        return window.args = {
          petId: '1'
        };
      });
      waitsFor(function() {
        return window.response != null;
      });
      runs(function() {
        var pet;
        pet = window.response.content.data;
        return console.log(pet);
      });
      it("handles redirects", function() {
        var opts, params;
        params = {};
        opts = {
          requestContentType: "application/json",
          responseContentType: null
        };
        new SwaggerRequest("GET", "http://localhost:8002/api/pet.redirect/3", params, opts, success_callback, error_callback, operation);
        return window.args = {
          petId: '1'
        };
      });
      waitsFor(function() {
        return window.response != null;
      });
      return runs(function() {
        return expect(window.response.status).toBe(200);
      });
    });
    describe("execute post operations", function() {
      beforeEach(function() {
        window.body = null;
        window.response = null;
        window.callback = function() {
          return 'mock callback';
        };
        window.error = function() {
          return 'mock error';
        };
        return window.operation = swagger.pet.operations.getPetById;
      });
      it("adds an object with json", function() {
        var opts, params;
        params = {
          body: JSON.stringify({
            id: 100,
            name: "monster",
            status: "dead"
          })
        };
        opts = {
          requestContentType: "application/json",
          responseContentType: "application/json"
        };
        return new SwaggerRequest("POST", "http://localhost:8002/api/pet", params, opts, success_callback, error_callback, operation);
      });
      waitsFor(function() {
        return window.response != null;
      });
      runs(function() {
        var data, resp;
        data = window.response.content.data;
        resp = JSON.parse(data);
        return expect(resp.code).toBe(200);
      });
      return it("adds an object with xml", function() {
        var opts, params;
        params = {
          headers: {},
          body: "<Pet><id>101</id><category><id>2</id><name>Cats</name></category><name>Cat 1</name><photoUrls>url1</photoUrls><photoUrls>url2</photoUrls><tags><id>1</id><name>tag1</name></tags><tags><id>2</id><name>tag2</name></tags><status>available</status></Pet>"
        };
        opts = {
          requestContentType: "application/xml",
          responseContentType: "application/xml"
        };
        new SwaggerRequest("POST", "http://localhost:8002/api/pet", params, opts, success_callback, error_callback, operation);
        waitsFor(function() {
          return window.response != null;
        });
        return runs(function() {
          var resp;
          return resp = window.response;
        });
      });
    });
    describe("execute put operations", function() {
      beforeEach(function() {
        window.body = null;
        window.response = null;
        window.callback = function() {
          return 'mock callback';
        };
        window.error = function() {
          return 'mock error';
        };
        return window.operation = swagger.pet.operations.getPetById;
      });
      it("updates an object with json", function() {
        var opts, params;
        params = {
          body: JSON.stringify({
            id: 1,
            name: "monster",
            status: "alive"
          })
        };
        opts = {
          requestContentType: "application/json",
          responseContentType: "application/json"
        };
        return new SwaggerRequest("PUT", "http://localhost:8002/api/pet", params, opts, success_callback, error_callback, operation);
      });
      waitsFor(function() {
        return window.response != null;
      });
      runs(function() {
        var data, resp;
        data = window.response.content.data;
        resp = JSON.parse(data);
        return expect(resp.code).toBe(200);
      });
      it("updates an object with xml", function() {
        var opts, params;
        params = {
          headers: {},
          body: "<Pet><id>1</id><category><id>2</id><name>Cats</name></category><name>Cat 1</name><photoUrls>url1</photoUrls><photoUrls>url2</photoUrls><tags><id>1</id><name>tag1</name></tags><tags><id>2</id><name>tag2</name></tags><status>available</status></Pet>"
        };
        opts = {
          requestContentType: "application/xml",
          responseContentType: "application/xml"
        };
        return new SwaggerRequest("PUT", "http://localhost:8002/api/pet", params, opts, success_callback, error_callback, operation);
      });
      waitsFor(function() {
        return window.response != null;
      });
      return runs(function() {
        var resp;
        return resp = window.response;
      });
    });
    describe("execute delete operations", function() {
      beforeEach(function() {
        window.body = null;
        window.response = null;
        window.success_callback = function(data) {
          return window.response = data;
        };
        window.error_callback = function(data) {
          return window.error = data;
        };
        return window.operation = swagger.pet.operations.getPetById;
      });
      it("deletes an object", function() {
        var params;
        window.success_callback = function(data) {
          return window.response = "successfully deleted pet";
        };
        params = {};
        return new SwaggerRequest("DELETE", "http://localhost:8002/api/pet/100", params, {}, success_callback, error_callback, operation);
      });
      waitsFor(function() {
        return window.response != null;
      });
      return runs(function() {
        var resp;
        resp = window.response;
        return expect(resp).toBe("successfully deleted pet");
      });
    });
    describe("execute options call", function() {
      beforeEach(function() {
        window.body = null;
        window.response = null;
        window.success_callback = function(data) {
          return window.response = data;
        };
        window.error_callback = function(data) {
          return window.error = data;
        };
        return window.operation = swagger.pet.operations.getPetById;
      });
      it("gets options on the pet resource", function() {
        var params;
        window.success_callback = function(data) {
          return window.response = "successfully fetched options";
        };
        params = {};
        return new SwaggerRequest("OPTIONS", "http://localhost:8002/api/pet", params, {}, success_callback, error_callback, operation);
      });
      waitsFor(function() {
        return window.response != null;
      });
      return runs(function() {
        var resp;
        resp = window.response;
        return expect(resp).toBe("successfully fetched options");
      });
    });
    describe("execute patch call", function() {
      beforeEach(function() {
        window.body = null;
        window.response = null;
        window.success_callback = function(data) {
          return window.response = data;
        };
        window.error_callback = function(data) {
          return window.error = data;
        };
        return window.operation = swagger.pet.operations.getPetById;
      });
      return it("merges an object", function() {
        var opts, params;
        window.success_callback = function(data) {
          return window.response = "successfully patched pet";
        };
        params = {
          body: JSON.stringify({
            name: "ghoul"
          })
        };
        opts = {
          requestContentType: "application/json",
          responseContentType: "application/json"
        };
        new SwaggerRequest("PATCH", "http://localhost:8002/api/pet/3", params, opts, success_callback, error_callback, operation);
        waitsFor(function() {
          return window.response != null;
        });
        return runs(function() {
          var resp;
          resp = window.response;
          return expect(resp).toBe("successfully patched pet");
        });
      });
    });
    return describe("api key authorizations", function() {
      beforeEach(function() {
        window.body = null;
        window.response = null;
        window.callback = null;
        window.error = null;
        window.success_callback = function(data) {
          return window.response = data;
        };
        return window.error_callback = function(data) {
          return window.error = data;
        };
      });
      it("applies an api key to the query string", function() {
        var auth, opts, params;
        params = {};
        opts = {
          requestContentType: null,
          responseContentType: "application/json"
        };
        auth = new ApiKeyAuthorization("api_key", "abc123", "query");
        window.authorizations.add("key", auth);
        new SwaggerRequest("GET", "http://localhost:8002/api/pet/1", params, opts, window.success_callback, window.error_callback, operation);
        return window.args = {
          petId: '1'
        };
      });
      waitsFor(function() {
        return window.response != null;
      });
      runs(function() {
        var data, pet;
        data = window.response.content.data;
        pet = JSON.parse(data);
        expect(pet).toBeDefined;
        expect(pet.id).toBe(1);
        return expect(window.error).toBe(null);
      });
      it("applies an api key as a header", function() {
        var auth, opts, params;
        params = {};
        opts = {
          requestContentType: null,
          responseContentType: "application/json"
        };
        auth = new ApiKeyAuthorization("api_key", "abc123", "header");
        window.authorizations.add("key", auth);
        new SwaggerRequest("GET", "http://localhost:8002/api/pet/1", params, opts, window.success_callback, window.error_callback, operation);
        return window.args = {
          petId: '1'
        };
      });
      waitsFor(function() {
        return window.response != null;
      });
      return runs(function() {
        var data, pet;
        data = window.response.content.data;
        pet = JSON.parse(data);
        expect(pet).toBeDefined;
        expect(pet.id).toBe(1);
        return expect(window.error).toBe(null);
      });
    });
  });

}).call(this);
